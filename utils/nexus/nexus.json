apiVersion: v1
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: nexus
    name: nexus
  spec:
    dockerImageRepository: sonatype/nexus
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: nexus-persistent
    name: nexus
  spec:
    ports:
    - name: http
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      deploymentconfig: nexus
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      application: nexus-persistent
    name: nexus
  spec:
    host: nexus.apps.10.1.2.2.xip.io
    to:
      kind: Service
      name: nexus
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: nexus-persistent
    name: nexus
  spec:
    replicas: 1
    selector:
      deploymentconfig: nexus
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: nexus
      spec:
        containers:
        - image: nexus
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 1
          name: nexus
          ports:
          - containerPort: 8081
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
          resources:
            requests:
              memory: 2Gi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /sonatype-work
            name: pvol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pvol
          persistentVolumeClaim:
            claimName: nexus-claim
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - nexus
        from:
          kind: ImageStreamTag
          name: nexus:latest
          namespace: ci
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      application: nexus-persistent
    name: nexus-claim
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 3Gi
- apiVersion: v1
  kind: Template
  labels:
    application: nexus-persistent
  metadata:
    annotations:
      description: Nexus service, with persistent storage. Scaling to more than one
        replica is not supported
      tags: repository-managers,nexus
    name: nexus-persistent
  objects:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: nexus-claim
      namespace: ci
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${SIZE}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: nexus
      namespace: ci
    spec:
      replicas: 1
      selector:
        deploymentconfig: nexus
      strategy:
        resources: {}
        rollingParams:
          intervalSeconds: 1
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            deploymentconfig: nexus
        spec:
          containers:
          - image: nexus
            imagePullPolicy: IfNotPresent
            livenessProbe:
              httpGet:
                port: 8081
              initialDelaySeconds: 180
              timeoutSeconds: 1
            name: nexus
            ports:
            - containerPort: 8081
              protocol: TCP
            readinessProbe:
              httpGet:
                port: 8081
              initialDelaySeconds: 20
              timeoutSeconds: 1
            resources:
              requests:
                memory: 2Gi
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            volumeMounts:
            - mountPath: /sonatype-work
              name: pvol
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          serviceAccount: nexus
          serviceAccountName: nexus
          volumes:
          - name: pvol
            persistentVolumeClaim:
              claimName: nexus-claim
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - nexus
          from:
            kind: ImageStreamTag
            name: nexus:latest
            namespace: ci
        type: ImageChange
  - apiVersion: v1
    kind: Route
    metadata:
      name: nexus
      namespace: ci
    spec:
      host: ${APPLICATION_HOSTNAME}
      to:
        kind: Service
        name: nexus
  - apiVersion: v1
    kind: Service
    metadata:
      name: nexus
      namespace: ci
    spec:
      ports:
      - name: http
        port: 8081
        targetPort: 8081
      selector:
        deploymentconfig: nexus
      sessionAffinity: None
      type: ClusterIP
  parameters:
  - description: The name for the application. The service will be named like the
      application.
    displayName: Application name.
    name: APPLICATION_NAME
    value: nexus
  - description: 'Custom hostname for service routes.  Leave blank for default hostname,
      e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Nexus instance hostname
    name: APPLICATION_HOSTNAME
  - description: Persistent Volume Size (512Mi, 5Gi,...)
    displayName: Persistent Volume Size
    name: SIZE
    value: 5Gi
kind: List
metadata: {}